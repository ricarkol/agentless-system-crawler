import json

from mock import mock
from unittest import TestCase
import unittest
from apps.vulnerability_annotator.frame_annotator_2 import MakeScan

class TestVuln(TestCase):
    def test_vuln_type_error(self):
        kafka_mock = mock.MagicMock()
        apt_mock = mock.MagicMock()
        args = mock.MagicMock()
        logger = mock.MagicMock()
        ms = MakeScan()
        ret_val = None
        osinfo=json.loads('{"osrelease": "3.13.0-55-generic", "osplatform": "x86_64", "uptime": 11581471.0, "osdistro": "Ubuntu", "ipaddr": ["127.0.0.1", "172.17.0.4"], "osname": "Linux-3.13.0-55-generic-x86_64-with-Ubuntu-16.04-xenial", "boottime": 1450079670.0, "ostype": "linux", "osversion": "#94-Ubuntu SMP Thu Jun 18 00:27:10 UTC 2015"}')
        kafka_mock.next_frame = mock.Mock(return_value=[ret_val])
        a, b = ms.get_version_distro(osinfo, "registry.stage1.ng.bluemix.net/ccsapi_tests/test:valid", logger, "b9eb20aa-64e3-461e-9473-f59170b70115")
        self.assertIsNone(a)
        self.assertIsNone(b)

if __name__ == '__main__':
    unittest.main()
