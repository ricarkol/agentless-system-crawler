input {
  file {
    path => [ "/var/log/crawler-*.log" ]
    type => "crawler-log"
  }

  file {
    path => [ "/var/log/cloudsight-logstash.log" ]
    type => "logcrawler-log"
  }
}

filter {
  # Confirmed emit to mtgraphite queue on the crawler side
  grok {
    type => "crawler-log"
    match => {"message" => "\.*Emitted (?:[+-]?(?:[0-9]+)) features\.*" }
    add_tag => "emitted"
  }
  if "emitted" in [tags] {
    metrics {
      meter => "%{host}.emits"
      add_tag => "emitmetric"
      flush_interval => 60
      clear_interval => 100000
    }
  }
}


filter {
  # Confirmed socket write to mtgraphite
  grok {
    type => "crawler-log"
    match => {"message" => "\.*Confirmed write to mtgraphite socket\.*" }
    add_tag => "written"
  }
  if "written" in [tags] {
    metrics {
      exclude_tags => ["emitmetric"]
      meter => "%{host}.mtgraphite.writes"
      add_tag => "writemetric"
      flush_interval => 60
      clear_interval => 100000
    }
  }
}

filter {
  # Crawler log file link
  grok {
    type => "crawler-log"
    match => {"message" => "\.*Linking container [A-Fa-f0-9]{12}\.*" }
    add_tag => "linked"
  }
  if "linked" in [tags] {
    metrics {
      exclude_tags => ["writemetric", "emitmetric"]
      meter => "%{host}.logs.links"
      add_tag => "linkmetric"
      flush_interval => 60
      clear_interval => 100000
    }
  }
}


filter {
  # Logcrawler "F R A M E being packed"
  grok {
    type => "logcrawler-log"
    match => {"message" => "\.*F\sR\sA\sM\sE\sbeing\spacked\.*" }
    add_tag => "packed"
  }
  if "packed" in [tags] {
    metrics {
      exclude_tags => ["writemetric", "emitmetric", "linkmetric"]
      meter => "%{host}.mtlumberjack.packs"
      add_tag => "packmetric"
      flush_interval => 60
      clear_interval => 100000
    }
  }
}


filter {
  # Logcrawler packets sent
  grok {
    type => "logcrawler-log"
    match => {"message" => "\.*Sending a compressed frame\.*" }
    add_tag => "logsent"
  }
  if "logsent" in [tags] {
    metrics {
      exclude_tags => ["writemetric", "emitmetric", "linkmetric", "packmetric"]
      meter => "%{host}.mtlumberjack.writes"
      add_tag => "logsendmetric"
      flush_interval => 60
      clear_interval => 100000
    }
  }
}


output {

  if ("writemetric" in [tags] or "linkmetric" in [tags] or
      "emitmetric" in [tags] or "packmetric" in [tags] or
      "logsendmetric" in [tags]) {
    mtgraphite {
      host => "<LOGMET_HOST>"
      port => <LOGMET_PORT>
      supertenant_id => "<SUPERTENANT_ID>"
      supertenant_password => "<SUPERTENANT_PASSWORD>"
      include_metrics => [ "count","rate" ]
      fields_are_metrics => true
      #metrics_format => "1fb90c5d-84e6-452f-a131-9128c565a64f.crawler.stats.*"
      metrics_format => "<SPACE_ID>.crawler.stats.*"
    }
  }

}
