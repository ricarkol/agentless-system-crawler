input {
    file {
        path => [ "/var/log/crawler_container_logs/**/*" ]
        exclude => 'd464347c-3b99-11e5-b0e9-062dcffc249f.type-mapping'
        sincedb_write_interval => 5
    }
}

filter {
  # Filter out insanely long lines
  ruby {
    code => 'event.cancel if event["message"].bytesize > 1000'
  }

  throttle {
    # Limit the number of logs per file to 30 per minute.
    after_count => 30
    period => 60
    key => "%{host}%{path}"
    add_tag => "throttled"
  }

  if "throttled" not in [tags] {
    #  log_crawler_core {
    #  }
    json {
      source => "message"
    }
    if "_jsonparsefailure" in [tags] {
      mutate {
        remove_tag => ['_jsonparsefailure']
      }
    }
  }
}

output {
  #stdout { }
  if "throttled" not in [tags] {
    mtlumberjack {
      hosts => ["<LOGMET_HOST>"]
      port => <LOGMET_PORT>
      supertenant_id => "<SUPERTENANT_ID>"
      supertenant_password => "<SUPERTENANT_PASSWORD>"
      codec => "json"
    }
  }
}
