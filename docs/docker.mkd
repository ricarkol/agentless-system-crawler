# Why use Docker?
Here's a [high-level overview](http://www.docker.com/whatisdocker/) of what
Docker provides. The main reasons to prefer Docker for deploying CloudSight
are
* Isolation between various services
* Build integrity/reproducibility
* Deployment without building by pulling images from a central repository

# CloudSight project convention/philosophy in using Docker
* Each service has its own image (could be built on top of other images)
* Each image is built using a Dockerfile that corresponds to the install.sh
  from the vagrant.sh setup. (You could simply invoke install.sh from the
  Dockerfile, but better to break it into individual commands to benefit
  from Docker's build cache.)
* Image's entry point is a start script which should print the help message
  when the image is run without any arguments.
* Note that in docker, a container's lifetime ends when the entrypoint
  program's does. The entry point's return code is the container's return
  code. The container should return a meaningful error code.
* The entry point should handle `SIGTERM` and gracefully bring down the
  service.
* Fail early if things don't look right. Don't have complex error checking
  and handling. It is better to fail quickly and a new container can be
  started later.
* Don't fail too often. If there is a recurring issue that keeps coming up
  again and again, handle it in your service.
* All services write their logs under `/var/log/cloudsight/SERVICE/*.log`
  and keep persistent data under `/data/cloudsight/SERVICE/*.log`
* Write useful messages to stdout and fatal log messages to stderr. This
  makes it easy to examine the state of a container by simply looking at
  its output without poring thought log files.

